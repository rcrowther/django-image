from django.forms.models import ModelForm
from django.forms.utils import ErrorList


# class ModelFormMetaclass(DeclarativeFieldsMetaclass):
    # def __new__(mcs, name, bases, attrs):

    # new_class = super().__new__(mcs, name, bases, attrs)
    
    # return new_class
    
class ExpandedModelForm(ModelForm):
    field_modifiers = {}
    
    def __init__(self, data=None, files=None, auto_id='id_%s', prefix=None,
                 initial=None, error_class=ErrorList, label_suffix=None,
                 empty_permitted=False, instance=None, use_required_attribute=None,
                 renderer=None):
        super().__init__(data=None, files=None, auto_id='id_%s', prefix=None,
                 initial=None, error_class=ErrorList, label_suffix=None,
                 empty_permitted=False, instance=None, use_required_attribute=None,
                 renderer=None)
        # for key,Form in self.field_modifiers.items():
            
            # try:
                # print(str(self.fields[key]))
                # del(self.fields[key])
                # self._meta.fields.remove(key)
                
            # except KeyError:
                # pass
                # # key is a class
                # for atr_name, model_field in self.field_modifiers:
                   # if (key ==  model_field):
                        # del(self.fields, atr_name)
        # print('init')
        # print(str(self._meta.fields))
