# make reforms
from image import models
from image import filters
a=models.Image.objects.get(title='phone')
ifilter=filters.Thumb()
d = a.get_reform(ifilter)
#import os
#in_path = os.path.basename(a.image.name)
#in_no_extension, in_extension = os.path.splitext(in_path)
#out_path_no_extension = in_no_extension + ifilter.path()
#a.reform_file_generate(out_path_no_extension , ifilter)
#reform = models.Reform(image = a, filter_id = ifilter.path(), reform = d.fp, width = d.width, height = d.height)
models.Reform.objects.delete(filter_id="thumb")
models.Reform.objects.filter(filter_id="thumb").delete()


# filters
import image
image.get_filters()


# registry
import image
image.autodiscover()
image.autodiscover_noncore_modules('image_filters')
image.registry._registry
image.registry.list()

# utils
from image import utils
c = utils.ModulePath.from_str('droop.python.lookup')
str(c)
c.root
c.branch
c.branch().branch()
c.extend('coop')


# get a modelform
from django.forms.models import ModelForm, modelform_factory
from image.models import Image
class ImageForm(ModelForm):
    class Meta:
        model = Image
        fields = ['src', 'title', 'auto_delete']

mf =  ImageForm(prefix="embed-")  

# or
MF = modelform_factory(Image, fields=['src', 'title', 'auto_delete'])
mf =  MF(prefix="embed-")  



from image import utils
s = utils.Settings()
s.dirs
s.app_dirs
s.media_subpath_originals
s.media_subpath_reforms

